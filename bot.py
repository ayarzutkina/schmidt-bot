from telegram import Update
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler, filters,
    ConversationHandler, ContextTypes
)
from datetime import datetime
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import requests

# –°—Ç–∞–¥–∏–∏
AGE_CONFIRM, ASK_NAME, ASK_PHOTO = range(3)

# üîß –í–°–¢–ê–í–¨ –°–Æ–î–ê –°–í–û–ô –¢–û–ö–ï–ù!
BOT_TOKEN = "8089874483:AAFbJ9hnJ71EKGIczU9H0r7mxA2U_vFKHBQ"

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Google Sheets –∏–º—è –∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ
def save_to_google_sheets(name, photo_url):
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
    creds = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
    client = gspread.authorize(creds)

    sheet = client.open("–ë–∞—Ä-—Ç—É—Ä Schmidt").sheet1
    sheet.append_row([name, photo_url])

# –ü–æ–ª—É—á–∞–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ
def get_direct_photo_url(file_id):
    # 1. –ü–æ–ª—É—á–∞–µ–º file_path —á–µ—Ä–µ–∑ getFile
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/getFile?file_id={file_id}"
    response = requests.get(url)
    result = response.json()

    if result.get("ok"):
        file_path = result["result"]["file_path"]
        return f"https://api.telegram.org/file/bot{BOT_TOKEN}/{file_path}"
    else:
        return "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ"

# –°—Ç–∞—Ä—Ç
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —ç—Ç–æ —á–∞—Ç-–±–æ—Ç *–ì–æ—Ä–æ–¥—Å–∫–∏–µ –ª–µ–≥–µ–Ω–¥—ã by Schmidt*.\n\n"
        "–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –±—Ä–µ–Ω–¥–µ Schmidt –∏ –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –±–∞—Ä-—Ç—É—Ä–µ "
        "¬´–ì–æ—Ä–æ–¥—Å–∫–∏–µ –ª–µ–≥–µ–Ω–¥—ã by Schmidt¬ª.\n\n"
        "–û–±–µ—â–∞–µ–º ‚Äî –Ω–∏–∫–∞–∫–æ–≥–æ —Å–ø–∞–º–∞. üòä –ñ–º–∏—Ç–µ –Ω–∞ ¬´–°–¢–ê–†–¢¬ª –∏ –Ω–∞—á–∏–Ω–∞–π—Ç–µ –∑–∞–≥–∞–¥–æ—á–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ!",
        parse_mode="Markdown"
    )
    await update.message.reply_text(
        "–ë–∞—Ä-—Ç—É—Ä *–ì–æ—Ä–æ–¥—Å–∫–∏–µ –ª–µ–≥–µ–Ω–¥—ã by Schmidt* –≤—Å—ë –±–ª–∏–∂–µ.\n\n"
        "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –í–∞–º –µ—Å—Ç—å 18 –ª–µ—Ç?\n\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ *–î–∞* –∏–ª–∏ *–ù–µ—Ç*.",
        parse_mode="Markdown"
    )
    return AGE_CONFIRM

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞
async def age_confirm(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.text.strip().lower() != "–¥–∞":
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, —É—á–∞—Å—Ç–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Å 18 –ª–µ—Ç.")
        return ConversationHandler.END
    await update.message.reply_text("–°–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?")
    return ASK_NAME

# –ò–º—è
async def ask_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['name'] = update.message.text.strip()

    await update.message.reply_text(
        f"–†–∞–¥ –Ω–∞—à–µ–º—É –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É, {context.user_data['name']}! üòä\n\n"
        "–í–æ—Ç –º–∞—Ä—à—Ä—É—Ç—ã –±–∞—Ä-—Ç—É—Ä–∞ —Å –≥–æ—Ä–æ–¥—Å–∫–∏–º–∏ –ª–µ–≥–µ–Ω–¥–∞–º–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –±—Ä–µ–Ω–¥–µ Schmidt:\n\n"
        "1Ô∏è‚É£ –õ–µ–≥–µ–Ω–¥–∞ –Ω–∞ –ê—Ä–±–∞—Ç–µ\n"
        "2Ô∏è‚É£ –ü—Ä–∏–∑—Ä–∞–∫ –ë–∞—Å—Å–µ–π–Ω–æ–π —É–ª–∏—Ü—ã\n"
        "3Ô∏è‚É£ –¢–∞–π–Ω–∞ –ú–∞—Ä–æ—Å–µ–π–∫–∏\n"
        "4Ô∏è‚É£ –°–µ–∫—Ä–µ—Ç –í–æ—Ä–æ–Ω—Ü–æ–≤–∞ –ø–æ–ª—è\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç –≤ –∑–∞–≤–µ–¥–µ–Ω–∏–∏ –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–∞—Å–ø–æ—Ä—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞!"
    )

    await update.message.reply_text(
        "–ö–æ–≥–¥–∞ –ø—Ä–æ–π–¥—ë—Ç–µ –±–∞—Ä-—Ç—É—Ä, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—é–¥–∞ üì∏ *—Ñ–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞*, "
        "–∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –≤ –∑–∞–≤–µ–¥–µ–Ω–∏–∏.",
        parse_mode="Markdown"
    )
    return ASK_PHOTO

# –§–æ—Ç–æ
async def receive_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.photo:
        name = context.user_data.get("name", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        photo = update.message.photo[-1]  # –°–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ
        photo_file_id = photo.file_id

        # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª
        photo_url = get_direct_photo_url(photo_file_id)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Google –¢–∞–±–ª–∏—Ü—É
        save_to_google_sheets(name, photo_url)

        await update.message.reply_text(
            "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ñ–æ—Ç–æ! üéâ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –±–∞—Ä-—Ç—É—Ä.\n\n"
            "–ú—ã –ø—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—Å –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω—É—é –≤–µ—á–µ—Ä–∏–Ω–∫—É –∏ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –ø—Ä–∏–∑–æ–≤! ü•≥"
        )
        return ConversationHandler.END
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞ üì∏.")
        return ASK_PHOTO

# –û—Ç–º–µ–Ω–∞
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –¥–∏–∞–ª–æ–≥. –ù–∞–ø–∏—à–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")
    return ConversationHandler.END

# –ó–∞–ø—É—Å–∫
def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            AGE_CONFIRM: [MessageHandler(filters.TEXT & ~filters.COMMAND, age_confirm)],
            ASK_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, ask_name)],
            ASK_PHOTO: [
                MessageHandler(filters.PHOTO, receive_photo),
                MessageHandler(filters.TEXT & ~filters.COMMAND, receive_photo)
            ],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv_handler)
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    app.run_polling()

if __name__ == '__main__':
    main()